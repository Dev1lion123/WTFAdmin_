{"ast":null,"code":"// Импортируем необходимые зависимости\nconst express = require('express');\nconst router = express.Router();\nconst mysql = require('mysql');\n\n// Создаем подключение к базе данных MySQL\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'WTF_Admin',\n  password: 'WC#i3oqcNh0o',\n  database: 'wtf_db'\n});\n\n// Подключаемся к базе данных\nconnection.connect(err => {\n  if (err) {\n    console.error('Ошибка подключения к базе данных:', err);\n    throw err;\n  }\n  console.log('Подключение к базе данных успешно установлено');\n});\n\n// Определяем маршрут для обработки POST запросов\nrouter.post('/addData', (req, res) => {\n  // Получаем данные из тела запроса\n  const {\n    title,\n    link,\n    pic,\n    text\n  } = req.body;\n\n  // Формируем SQL запрос для вставки данных в таблицу\n  const sql = `INSERT INTO new_orders_info (title, link, pic, text) VALUES ('${title}', '${link}', '${pic}', '${text}')`;\n\n  // Выполняем SQL запрос\n  connection.query(sql, (err, result) => {\n    if (err) {\n      console.error('Ошибка выполнения SQL запроса:', err);\n      res.status(500).send('Ошибка сервера');\n      return;\n    }\n    console.log('Данные успешно добавлены в базу данных');\n    res.status(200).send('Данные успешно добавлены в базу данных');\n  });\n});\n\n// Экспортируем router\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","mysql","connection","createConnection","host","user","password","database","connect","err","console","error","log","post","req","res","title","link","pic","text","body","sql","query","result","status","send","module","exports"],"sources":["G:/GH projects/WTFAdmin/src/server.js"],"sourcesContent":["// Импортируем необходимые зависимости\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst mysql = require('mysql');\r\n\r\n// Создаем подключение к базе данных MySQL\r\nconst connection = mysql.createConnection({\r\n  host: 'localhost',\r\n  user: 'WTF_Admin',\r\n  password: 'WC#i3oqcNh0o',\r\n  database: 'wtf_db'\r\n});\r\n\r\n// Подключаемся к базе данных\r\nconnection.connect((err) => {\r\n  if (err) {\r\n    console.error('Ошибка подключения к базе данных:', err);\r\n    throw err;\r\n  }\r\n  console.log('Подключение к базе данных успешно установлено');\r\n});\r\n\r\n// Определяем маршрут для обработки POST запросов\r\nrouter.post('/addData', (req, res) => {\r\n  // Получаем данные из тела запроса\r\n  const { title, link, pic, text } = req.body;\r\n\r\n  // Формируем SQL запрос для вставки данных в таблицу\r\n  const sql = `INSERT INTO new_orders_info (title, link, pic, text) VALUES ('${title}', '${link}', '${pic}', '${text}')`;\r\n\r\n  // Выполняем SQL запрос\r\n  connection.query(sql, (err, result) => {\r\n    if (err) {\r\n      console.error('Ошибка выполнения SQL запроса:', err);\r\n      res.status(500).send('Ошибка сервера');\r\n      return;\r\n    }\r\n    console.log('Данные успешно добавлены в базу данных');\r\n    res.status(200).send('Данные успешно добавлены в базу данных');\r\n  });\r\n});\r\n\r\n// Экспортируем router\r\nmodule.exports = router;\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAMC,KAAK,GAAGH,OAAO,CAAC,OAAO,CAAC;;AAE9B;AACA,MAAMI,UAAU,GAAGD,KAAK,CAACE,gBAAgB,CAAC;EACxCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,WAAW;EACjBC,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;AACZ,CAAC,CAAC;;AAEF;AACAL,UAAU,CAACM,OAAO,CAAEC,GAAG,IAAK;EAC1B,IAAIA,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;IACvD,MAAMA,GAAG;EACX;EACAC,OAAO,CAACE,GAAG,CAAC,+CAA+C,CAAC;AAC9D,CAAC,CAAC;;AAEF;AACAb,MAAM,CAACc,IAAI,CAAC,UAAU,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACpC;EACA,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGL,GAAG,CAACM,IAAI;;EAE3C;EACA,MAAMC,GAAG,GAAI,iEAAgEL,KAAM,OAAMC,IAAK,OAAMC,GAAI,OAAMC,IAAK,IAAG;;EAEtH;EACAjB,UAAU,CAACoB,KAAK,CAACD,GAAG,EAAE,CAACZ,GAAG,EAAEc,MAAM,KAAK;IACrC,IAAId,GAAG,EAAE;MACPC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEF,GAAG,CAAC;MACpDM,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,gBAAgB,CAAC;MACtC;IACF;IACAf,OAAO,CAACE,GAAG,CAAC,wCAAwC,CAAC;IACrDG,GAAG,CAACS,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,wCAAwC,CAAC;EAChE,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAC,MAAM,CAACC,OAAO,GAAG5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}